version: 2.1

executors:
  python-oidc-executor:
    docker:
      - image: cimg/python:3.11
    environment:
      AWS_DEFAULT_REGION: "us-east-1"

jobs:
  init-cdktf:
    executor: python-oidc-executor
    steps:
      - checkout

      - run:
          name: Install Terraform CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y wget unzip
            wget https://releases.hashicorp.com/terraform/1.13.0/terraform_1.13.0_linux_amd64.zip
            unzip terraform_1.13.0_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -version

      - run:
          name: Install Node.js and cdktf CLI
          command: |
            sudo apt-get update
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs jq
            node --version
            npm --version
            sudo npm install -g cdktf-cli

      - run:
          name: Initialize CDKTF project (once)
          command: |
            mkdir -p ~/cdktf_project
            cd ~/cdktf_project
            cdktf init --template=python --local \
              --project-name=my_project \
              --project-description="CircleCI CDKTF Project"
      - run:
          name: Add AWS provider
          command: | 
            cd ~/cdktf_project
            jq '.terraformProviders = ["hashicorp/aws@~>5.0"]' cdktf.json > tmp.json && mv tmp.json cdktf.json
            #cdktf provider add "hashicorp/aws@~>5.0"
      - run:
          name: Overwrite main.py with file.py
          command: |
            cd ~/cdktf_project
            cp ../project/file.py main.py

      - run:
          name: Show cdktf.json content
          command: |
            cd ~/cdktf_project
            echo "===== cdktf.json content ====="
            cat cdktf.json
            echo "=============main.py file================"
            cat main.py
      - run:
          name: Generate provider bindings
          command: |
            cd ~/cdktf_project
            cdktf get

      - persist_to_workspace:
          root: ~/
          paths:
            - cdktf_project

  deploy-aws:
    executor: python-oidc-executor
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Install Terraform CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y wget unzip
            wget https://releases.hashicorp.com/terraform/1.13.0/terraform_1.13.0_linux_amd64.zip
            unzip terraform_1.13.0_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -version

      - run:
          name: Install Node.js and cdktf CLI
          command: |
            sudo apt-get update
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs jq
            node --version
            npm --version
            sudo npm install -g cdktf-cli

      - run:
          name: Install Python dependencies
          command: |
            cd ~/cdktf_project
            pipenv install constructs
            pipenv install cdktf-cdktf-provider-aws

      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get install -y awscli

      - run:
          name: Assume AWS role using OIDC
          command: |
            export OIDC_TOKEN=$(echo $CIRCLE_OIDC_TOKEN)
            export AWS_ROLE_ARN="arn:aws:iam::961341535277:role/newcircleci"
            export AWS_SESSION_NAME="circleci-session"
            CREDENTIALS=$(aws sts assume-role-with-web-identity \
              --role-arn "$AWS_ROLE_ARN" \
              --role-session-name "$AWS_SESSION_NAME" \
              --web-identity-token "$OIDC_TOKEN" \
              --duration-seconds 3600)
            echo "export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r .Credentials.AccessKeyId)" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r .Credentials.SecretAccessKey)" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r .Credentials.SessionToken)" >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: Deploy to AWS using cdktf
          command: |
            cd ~/cdktf_project
            cdktf get
            cdktf synth
            cdktf destroy infra --auto-approve

workflows:
  version: 2
  deploy:
    jobs:
      - init-cdktf
      - deploy-aws:
          requires:
            - init-cdktf
